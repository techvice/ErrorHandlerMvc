@{
    ViewBag.Title = "ErrorHandlerMvc Sample App";
}
@* ReSharper disable Mvc.ActionNotResolved *@
@* Disabled because we want to generate not found routes! *@


<h1>ErrorHandlerMvc Sample App</h1>
<p>The sample application shows how ErrorHandlerMvc handles various 'not found' or exception scenarios.</p>
<p>The following links will return either a 404 page or an error page. (See Views\Shared\NotFound.cshtml and Views\Shared\Error.cshtml)</p>
<p>Non-existent controller action: <a href="@Url.Action("DoesNotExistAction")">/home/bad</a></p>
<p>Non-existent controller: <a href="@Url.Action("Index", "DoesNotExistController")">/bad</a></p>
<p>Non-existent route: <a href="@Url.Content("~/home/index/foo/bar")">/home/index/foo/bar</a></p>
<p>Legacy DOS names: <a href="@Url.Content("~/con")">/con</a>, <a href="@Url.Content("~/com1")">/com1</a>, <a href="@Url.Content("~/lpt1")">/lpt1</a>, <a href="@Url.Content("~/aux")">/aux</a>, <a href="@Url.Content("~/prt")">/prt</a>, <a href="@Url.Content("~/nul")">/nul</a></p>
<p>Request filtering hidden segments: <a href="@Url.Content("~/bin")">/bin</a>, <a href="@Url.Content("~/web.config")">/web.config</a>, <a href="@Url.Content("~/app_code")">/app_code</a>, <a href="@Url.Content("~/app_globalresources")">/app_globalresources</a>, <a href="@Url.Content("~/app_localresources")">/app_localresources</a>, <a href="@Url.Content("~/app_webreferences")">/app_webreferences</a>, <a href="@Url.Content("~/app_data")">/app_data</a>, <a href="@Url.Content("~/app_browsers")">/app_browsers</a></p>
<p>Paths that exist on disk and shouldn't be served: <a href="@Url.Content("~/controllers")">/controllers</a>, <a href="@Url.Content("~/content")">/content</a>, <a href="@Url.Content("~/global.asax")">/global.asax</a></p>
<p>MVC views: <a href="@Url.Content("~/views")">/views</a>, <a href="@Url.Content("~/views/home/index.cshtml")">/views/home/index.cshtml</a>, <a href="@Url.Content("~/views/shared/_layout.cshtml")">/views/shared/_layout.cshtml</a></p>
<p>Code-generated not found page: <a href="@Url.Action("product", new{id=1})">/home/product/1</a></p>
<p>Action that throws exception: <a href="@Url.Action("FailThrowsExecption")">/Home/FailThrowsExecption</a></p>

<h2>Using ErrorHandlerMvc in your web app</h2>
<p>The easiest way to add ErrorHandlerMvc is via nuget: <strong>Install-Package ErrorHandlerMvc</strong></p>
<p>The library auto-loads itself at application start-up. No config is needed.</p>


@* ReSharper restore Mvc.ActionNotResolved *@